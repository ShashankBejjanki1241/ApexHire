version: '3.8'

services:
  # Web Interface (Streamlit)
  apexhire-web:
    build: .
    container_name: apexhire-web
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Service (FastAPI)
  apexhire-api:
    build: .
    container_name: apexhire-api
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - API_HOST=0.0.0.0
      - API_PORT=8000
    restart: unless-stopped
    command: ["python", "api/main.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: apexhire-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - cache

  # Optional: Add PostgreSQL for data persistence (future enhancement)
  postgres:
    image: postgres:15-alpine
    container_name: apexhire-db
    environment:
      POSTGRES_DB: apexhire
      POSTGRES_USER: apexhire_user
      POSTGRES_PASSWORD: apexhire_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - database

volumes:
  redis_data:
  postgres_data:
